{"ast":null,"code":"/*! @azure/msal-common v4.5.0 2021-07-22 */\n'use strict';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */\nvar TokenCacheContext = /** @class */function () {\n  function TokenCacheContext(tokenCache, hasChanged) {\n    this.cache = tokenCache;\n    this.hasChanged = hasChanged;\n  }\n  Object.defineProperty(TokenCacheContext.prototype, \"cacheHasChanged\", {\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\n    get: function () {\n      return this.hasChanged;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TokenCacheContext.prototype, \"tokenCache\", {\n    /**\r\n     * function to retrieve the token cache\r\n     */\n    get: function () {\n      return this.cache;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return TokenCacheContext;\n}();\nexport { TokenCacheContext };","map":{"version":3,"mappings":";;;AAAA;;;;AAOA;;;;;EAaI,2BAAYA,UAAmC,EAAEC,UAAmB;IAChE,IAAI,CAACC,KAAK,GAAGF,UAAU;IACvB,IAAI,CAACC,UAAU,GAAGA,UAAU;;EAMhCE,sBAAIC,8CAAe;;;;SAAnB;MACI,OAAO,IAAI,CAACH,UAAU;KACzB;;;;EAKDE,sBAAIC,yCAAU;;;;SAAd;MACI,OAAO,IAAI,CAACF,KAAK;KACpB;;;;EACL,wBAAC;AAAD,CAAC","names":["tokenCache","hasChanged","cache","Object","TokenCacheContext"],"sources":["../../../src/cache/persistence/TokenCacheContext.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache\";\r\n\r\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */export class TokenCacheContext {\r\n    /**\r\n     * boolean indicating cache change\r\n     */\r\n    hasChanged: boolean;\r\n    /**\r\n     * serializable token cache interface\r\n     */\r\n    cache: ISerializableTokenCache;\r\n\r\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\r\n        this.cache = tokenCache;\r\n        this.hasChanged = hasChanged;\r\n    }\r\n\r\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\r\n    get cacheHasChanged(): boolean {\r\n        return this.hasChanged;\r\n    }\r\n\r\n    /**\r\n     * function to retrieve the token cache\r\n     */\r\n    get tokenCache(): ISerializableTokenCache {\r\n        return this.cache;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}