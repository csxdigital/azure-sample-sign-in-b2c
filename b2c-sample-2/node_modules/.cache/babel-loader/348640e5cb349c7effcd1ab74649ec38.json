{"ast":null,"code":"/*! @azure/msal-browser v2.16.0 2021-07-22 */\n'use strict';\n\nimport { EventType } from './EventType.js';\nimport { InteractionType, InteractionStatus } from '../utils/BrowserConstants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\nvar EventMessageUtils = /** @class */function () {\n  function EventMessageUtils() {}\n  /**\r\n   * Gets interaction status from event message\r\n   * @param message\r\n   */\n  EventMessageUtils.getInteractionStatusFromEvent = function (message) {\n    switch (message.eventType) {\n      case EventType.LOGIN_START:\n        return InteractionStatus.Login;\n      case EventType.SSO_SILENT_START:\n        return InteractionStatus.SsoSilent;\n      case EventType.ACQUIRE_TOKEN_START:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          return InteractionStatus.AcquireToken;\n        }\n        break;\n      case EventType.HANDLE_REDIRECT_START:\n        return InteractionStatus.HandleRedirect;\n      case EventType.LOGOUT_START:\n        return InteractionStatus.Logout;\n      case EventType.LOGIN_SUCCESS:\n      case EventType.SSO_SILENT_SUCCESS:\n      case EventType.HANDLE_REDIRECT_END:\n      case EventType.LOGIN_FAILURE:\n      case EventType.SSO_SILENT_FAILURE:\n      case EventType.LOGOUT_END:\n        return InteractionStatus.None;\n      case EventType.ACQUIRE_TOKEN_SUCCESS:\n      case EventType.ACQUIRE_TOKEN_FAILURE:\n        if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\n          return InteractionStatus.None;\n        }\n        break;\n    }\n    return null;\n  };\n  return EventMessageUtils;\n}();\nexport { EventMessageUtils };","map":{"version":3,"mappings":";;;;;;AAAA;;;;;EA4BA;;;;;EAMWA,+CAA6B,GAApC,UAAqCC,OAAqB;IACtD,QAAQA,OAAO,CAACC,SAAS;MACrB,KAAKC,SAAS,CAACC,WAAW;QACtB,OAAOC,iBAAiB,CAACC,KAAK;MAClC,KAAKH,SAAS,CAACI,gBAAgB;QAC3B,OAAOF,iBAAiB,CAACG,SAAS;MACtC,KAAKL,SAAS,CAACM,mBAAmB;QAC9B,IAAIR,OAAO,CAACS,eAAe,KAAKC,eAAe,CAACC,QAAQ,IAAIX,OAAO,CAACS,eAAe,KAAKC,eAAe,CAACE,KAAK,EAAE;UAC3G,OAAOR,iBAAiB,CAACS,YAAY;;QAEzC;MACJ,KAAKX,SAAS,CAACY,qBAAqB;QAChC,OAAOV,iBAAiB,CAACW,cAAc;MAC3C,KAAKb,SAAS,CAACc,YAAY;QACvB,OAAOZ,iBAAiB,CAACa,MAAM;MACnC,KAAKf,SAAS,CAACgB,aAAa;MAC5B,KAAKhB,SAAS,CAACiB,kBAAkB;MACjC,KAAKjB,SAAS,CAACkB,mBAAmB;MAClC,KAAKlB,SAAS,CAACmB,aAAa;MAC5B,KAAKnB,SAAS,CAACoB,kBAAkB;MACjC,KAAKpB,SAAS,CAACqB,UAAU;QACrB,OAAOnB,iBAAiB,CAACoB,IAAI;MACjC,KAAKtB,SAAS,CAACuB,qBAAqB;MACpC,KAAKvB,SAAS,CAACwB,qBAAqB;QAChC,IAAI1B,OAAO,CAACS,eAAe,KAAKC,eAAe,CAACC,QAAQ,IAAIX,OAAO,CAACS,eAAe,KAAKC,eAAe,CAACE,KAAK,EAAE;UAC3G,OAAOR,iBAAiB,CAACoB,IAAI;;QAEjC;IAAM;IAId,OAAO,IAAI;GACd;EACL,wBAAC;AAAD,CAAC","names":["EventMessageUtils","message","eventType","EventType","LOGIN_START","InteractionStatus","Login","SSO_SILENT_START","SsoSilent","ACQUIRE_TOKEN_START","interactionType","InteractionType","Redirect","Popup","AcquireToken","HANDLE_REDIRECT_START","HandleRedirect","LOGOUT_START","Logout","LOGIN_SUCCESS","SSO_SILENT_SUCCESS","HANDLE_REDIRECT_END","LOGIN_FAILURE","SSO_SILENT_FAILURE","LOGOUT_END","None","ACQUIRE_TOKEN_SUCCESS","ACQUIRE_TOKEN_FAILURE"],"sources":["../../src/event/EventMessage.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthenticationResult, AuthError } from \"@azure/msal-common\";\r\nimport { EventType } from \"./EventType\";\r\nimport { InteractionStatus, InteractionType } from \"../utils/BrowserConstants\";\r\nimport { PopupRequest, RedirectRequest, SilentRequest, SsoSilentRequest, EndSessionRequest } from \"..\";\r\n\r\nexport type EventMessage = {\r\n    eventType: EventType;\r\n    interactionType: InteractionType | null;\r\n    payload: EventPayload;\r\n    error: EventError;\r\n    timestamp: number;\r\n};\r\n\r\nexport type PopupEvent = {\r\n    popupWindow: Window;\r\n};\r\n\r\nexport type EventPayload = PopupRequest | RedirectRequest | SilentRequest | SsoSilentRequest | EndSessionRequest | AuthenticationResult | PopupEvent | null;\r\n\r\nexport type EventError = AuthError | Error | null;\r\n\r\nexport type EventCallbackFunction = (message: EventMessage) => void;\r\n\r\nexport class EventMessageUtils {\r\n\r\n    /**\r\n     * Gets interaction status from event message\r\n     * @param message\r\n     */\r\n    static getInteractionStatusFromEvent(message: EventMessage): InteractionStatus|null {\r\n        switch (message.eventType) {\r\n            case EventType.LOGIN_START:\r\n                return InteractionStatus.Login;\r\n            case EventType.SSO_SILENT_START:\r\n                return InteractionStatus.SsoSilent;\r\n            case EventType.ACQUIRE_TOKEN_START:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    return InteractionStatus.AcquireToken;\r\n                }\r\n                break;\r\n            case EventType.HANDLE_REDIRECT_START:\r\n                return InteractionStatus.HandleRedirect;\r\n            case EventType.LOGOUT_START:\r\n                return InteractionStatus.Logout;\r\n            case EventType.LOGIN_SUCCESS:\r\n            case EventType.SSO_SILENT_SUCCESS:\r\n            case EventType.HANDLE_REDIRECT_END:\r\n            case EventType.LOGIN_FAILURE:\r\n            case EventType.SSO_SILENT_FAILURE:\r\n            case EventType.LOGOUT_END:\r\n                return InteractionStatus.None;\r\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\r\n            case EventType.ACQUIRE_TOKEN_FAILURE:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    return InteractionStatus.None;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}