{"ast":null,"code":"/*! @azure/msal-common v4.5.0 2021-07-22 */\n'use strict';\n\nimport { __extends } from '../_virtual/_tslib.js';\nimport { ServerError as ServerError$1 } from './ServerError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\n/**\r\n * InteractionRequiredAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\nvar InteractionRequiredAuthErrorMessage = [\"interaction_required\", \"consent_required\", \"login_required\"];\nvar InteractionRequiredAuthSubErrorMessage = [\"message_only\", \"additional_action\", \"basic_action\", \"user_password_expired\", \"consent_required\"];\n/**\r\n * Error thrown when user interaction is required at the auth server.\r\n */\nvar InteractionRequiredAuthError = /** @class */function (_super) {\n  __extends(InteractionRequiredAuthError, _super);\n  function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\n    var _this = _super.call(this, errorCode, errorMessage, subError) || this;\n    _this.name = \"InteractionRequiredAuthError\";\n    Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\n    return _this;\n  }\n  InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\n    var isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredAuthErrorMessage.indexOf(errorCode) > -1;\n    var isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    var isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredAuthErrorMessage.some(function (irErrorCode) {\n      return errorString.indexOf(irErrorCode) > -1;\n    });\n    return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\n  };\n  return InteractionRequiredAuthError;\n}(ServerError$1);\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage };","map":{"version":3,"mappings":";;;;;;AAAA;;;;AAOA;;;IAGaA,mCAAmC,GAAG,CAC/C,sBAAsB,EACtB,kBAAkB,EAClB,gBAAgB;IAGPC,sCAAsC,GAAG,CAClD,cAAc,EACd,mBAAmB,EACnB,cAAc,EACd,uBAAuB,EACvB,kBAAkB;AAGtB;;;;EAGkDC;EAE9C,sCAAYC,SAAkB,EAAEC,YAAqB,EAAEC,QAAiB;IAAxE,YACIC,kBAAMH,SAAS,EAAEC,YAAY,EAAEC,QAAQ,CAAC;IACxCE,KAAI,CAACC,IAAI,GAAG,8BAA8B;IAE1CC,MAAM,CAACC,cAAc,CAACH,KAAI,EAAEI,4BAA4B,CAACC,SAAS,CAAC;;;EAGhED,uDAA0B,GAAjC,UAAkCR,SAAkB,EAAEU,WAAoB,EAAER,QAAiB;IACzF,IAAMS,8BAA8B,GAAG,CAAC,CAACX,SAAS,IAAIH,mCAAmC,CAACe,OAAO,CAACZ,SAAS,CAAC,GAAG,CAAC,CAAC;IACjH,IAAMa,6BAA6B,GAAG,CAAC,CAACX,QAAQ,IAAIJ,sCAAsC,CAACc,OAAO,CAACV,QAAQ,CAAC,GAAG,CAAC,CAAC;IACjH,IAAMY,8BAA8B,GAAG,CAAC,CAACJ,WAAW,IAAIb,mCAAmC,CAACkB,IAAI,CAAC,UAACC,WAAW;MACzG,OAAON,WAAW,CAACE,OAAO,CAACI,WAAW,CAAC,GAAG,CAAC,CAAC;KAC/C,CAAC;IAEF,OAAOL,8BAA8B,IAAIG,8BAA8B,IAAID,6BAA6B;GAC3G;EACL,mCAAC;AAAD,CAlBA,CAAkDI,aAAW","names":["InteractionRequiredAuthErrorMessage","InteractionRequiredAuthSubErrorMessage","__extends","errorCode","errorMessage","subError","_super","_this","name","Object","setPrototypeOf","InteractionRequiredAuthError","prototype","errorString","isInteractionRequiredErrorCode","indexOf","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","some","irErrorCode","ServerError"],"sources":["../../src/error/InteractionRequiredAuthError.ts"],"sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ServerError } from \"./ServerError\";\r\n\r\n/**\r\n * InteractionRequiredAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const InteractionRequiredAuthErrorMessage = [\r\n    \"interaction_required\",\r\n    \"consent_required\",\r\n    \"login_required\"\r\n];\r\n\r\nexport const InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\"\r\n];\r\n\r\n/**\r\n * Error thrown when user interaction is required at the auth server.\r\n */\r\nexport class InteractionRequiredAuthError extends ServerError {\r\n\r\n    constructor(errorCode?: string, errorMessage?: string, subError?: string) {\r\n        super(errorCode, errorMessage, subError);\r\n        this.name = \"InteractionRequiredAuthError\";\r\n\r\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\r\n    }\r\n\r\n    static isInteractionRequiredError(errorCode?: string, errorString?: string, subError?: string) : boolean {\r\n        const isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredAuthErrorMessage.indexOf(errorCode) > -1;\r\n        const isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n        const isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredAuthErrorMessage.some((irErrorCode) => {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n\r\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}