{"ast":null,"code":"var _jsxFileName = \"/home/nicolasgou/dev/azure-sample-sign-in-b2c/b2c-sample-2/src/components/NavigationBar.jsx\",\n  _s = $RefreshSig$();\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\nimport { Nav, Navbar, Button, Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { loginRequest, b2cPolicies } from \"../authConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const NavigationBar = () => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const handleLogin = () => {\n    instance.loginPopup(loginRequest).catch(error => console.log(error));\n  };\n  /**\n   * Most applications will need to conditionally render certain components based on whether a user is signed in or not. \n   * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will \n   * only render their children if a user is authenticated or unauthenticated, respectively.\n   */\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      bg: \"primary\",\n      variant: \"dark\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"/\",\n        children: \"Microsoft identity platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AuthenticatedTemplate, {\n        children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n          as: Button,\n          href: \"/hello\",\n          children: \"HelloAPI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ml-auto\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"info\",\n            onClick: () => instance.loginPopup(b2cPolicies.authorities.editProfile),\n            className: \"ml-auto\",\n            children: \"Edit Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n            variant: \"warning\",\n            className: \"ml-auto\",\n            drop: \"left\",\n            title: \"Sign Out\",\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              as: \"button\",\n              onClick: () => instance.logoutPopup({\n                postLogoutRedirectUri: \"/\",\n                mainWindowRedirectUri: \"/\"\n              }),\n              children: \"Sign out using Popup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              as: \"button\",\n              onClick: () => instance.logoutRedirect({\n                postLogoutRedirectUri: \"/\"\n              }),\n              children: \"Sign out using Redirect\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UnauthenticatedTemplate, {\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          variant: \"secondary\",\n          className: \"ml-auto\",\n          drop: \"left\",\n          title: \"Sign In\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            as: \"button\",\n            onClick: handleLogin,\n            children: \"Sign in using Popup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            as: \"button\",\n            onClick: () => instance.loginRedirect(loginRequest),\n            children: \"Sign in using Redirect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(NavigationBar, \"kNmaupTUyOO55c/HFAYpHUXUX7Y=\", false, function () {\n  return [useMsal];\n});\n_c = NavigationBar;\nvar _c;\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"names":["AuthenticatedTemplate","UnauthenticatedTemplate","useMsal","Nav","Navbar","Button","Dropdown","DropdownButton","loginRequest","b2cPolicies","NavigationBar","instance","handleLogin","loginPopup","catch","error","console","log","authorities","editProfile","logoutPopup","postLogoutRedirectUri","mainWindowRedirectUri","logoutRedirect","loginRedirect"],"sources":["/home/nicolasgou/dev/azure-sample-sign-in-b2c/b2c-sample-2/src/components/NavigationBar.jsx"],"sourcesContent":["import { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\n\nimport { Nav, Navbar, Button, Dropdown, DropdownButton} from \"react-bootstrap\";\n\nimport { loginRequest, b2cPolicies } from \"../authConfig\";\n\nexport const NavigationBar = () => {\n\n    const { instance } = useMsal();\n\n    const handleLogin = () => {\n        instance.loginPopup(loginRequest)\n            .catch((error) => console.log(error))\n    }\n    /**\n     * Most applications will need to conditionally render certain components based on whether a user is signed in or not. \n     * msal-react provides 2 easy ways to do this. AuthenticatedTemplate and UnauthenticatedTemplate components will \n     * only render their children if a user is authenticated or unauthenticated, respectively.\n     */\n    return (\n        <>\n            <Navbar bg=\"primary\" variant=\"dark\">\n                <a className=\"navbar-brand\" href=\"/\">Microsoft identity platform</a>\n                <AuthenticatedTemplate>\n                    <Nav.Link as={Button} href=\"/hello\">HelloAPI</Nav.Link>\n                    <div className=\"ml-auto\">\n                        <Button variant=\"info\" onClick={() => instance.loginPopup(b2cPolicies.authorities.editProfile)} className=\"ml-auto\">Edit Profile</Button>\n                        <DropdownButton variant=\"warning\" className=\"ml-auto\" drop=\"left\" title=\"Sign Out\">\n                            <Dropdown.Item as=\"button\" onClick={() => instance.logoutPopup({ postLogoutRedirectUri: \"/\", mainWindowRedirectUri: \"/\" })}>Sign out using Popup</Dropdown.Item>\n                            <Dropdown.Item as=\"button\" onClick={() => instance.logoutRedirect({ postLogoutRedirectUri: \"/\" })}>Sign out using Redirect</Dropdown.Item>\n                        </DropdownButton>\n                    </div>\n                </AuthenticatedTemplate>\n                <UnauthenticatedTemplate>\n                    <DropdownButton variant=\"secondary\" className=\"ml-auto\" drop=\"left\" title=\"Sign In\">\n                        <Dropdown.Item as=\"button\" onClick={handleLogin}>Sign in using Popup</Dropdown.Item>\n                        <Dropdown.Item as=\"button\" onClick={() => instance.loginRedirect(loginRequest)}>Sign in using Redirect</Dropdown.Item>\n                    </DropdownButton>\n                </UnauthenticatedTemplate>\n            </Navbar>\n        </>\n    );\n};"],"mappings":";;AAAA,SAASA,qBAAqB,EAAEC,uBAAuB,EAAEC,OAAO,QAAQ,mBAAmB;AAE3F,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,cAAc,QAAO,iBAAiB;AAE9E,SAASC,YAAY,EAAEC,WAAW,QAAQ,eAAe;AAAC;AAAA;AAE1D,OAAO,MAAMC,aAAa,GAAG,MAAM;EAAA;EAE/B,MAAM;IAAEC;EAAS,CAAC,GAAGT,OAAO,EAAE;EAE9B,MAAMU,WAAW,GAAG,MAAM;IACtBD,QAAQ,CAACE,UAAU,CAACL,YAAY,CAAC,CAC5BM,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC7C,CAAC;EACD;AACJ;AACA;AACA;AACA;EACI,oBACI;IAAA,uBACI,QAAC,MAAM;MAAC,EAAE,EAAC,SAAS;MAAC,OAAO,EAAC,MAAM;MAAA,wBAC/B;QAAG,SAAS,EAAC,cAAc;QAAC,IAAI,EAAC,GAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgC,eACpE,QAAC,qBAAqB;QAAA,wBAClB,QAAC,GAAG,CAAC,IAAI;UAAC,EAAE,EAAEV,MAAO;UAAC,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eACvD;UAAK,SAAS,EAAC,SAAS;UAAA,wBACpB,QAAC,MAAM;YAAC,OAAO,EAAC,MAAM;YAAC,OAAO,EAAE,MAAMM,QAAQ,CAACE,UAAU,CAACJ,WAAW,CAACS,WAAW,CAACC,WAAW,CAAE;YAAC,SAAS,EAAC,SAAS;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAsB,eACzI,QAAC,cAAc;YAAC,OAAO,EAAC,SAAS;YAAC,SAAS,EAAC,SAAS;YAAC,IAAI,EAAC,MAAM;YAAC,KAAK,EAAC,UAAU;YAAA,wBAC9E,QAAC,QAAQ,CAAC,IAAI;cAAC,EAAE,EAAC,QAAQ;cAAC,OAAO,EAAE,MAAMR,QAAQ,CAACS,WAAW,CAAC;gBAAEC,qBAAqB,EAAE,GAAG;gBAAEC,qBAAqB,EAAE;cAAI,CAAC,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAqC,eAChK,QAAC,QAAQ,CAAC,IAAI;cAAC,EAAE,EAAC,QAAQ;cAAC,OAAO,EAAE,MAAMX,QAAQ,CAACY,cAAc,CAAC;gBAAEF,qBAAqB,EAAE;cAAI,CAAC,CAAE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAwC;UAAA;YAAA;YAAA;YAAA;UAAA,QAC7H;QAAA;UAAA;UAAA;UAAA;QAAA,QACf;MAAA;QAAA;QAAA;QAAA;MAAA,QACc,eACxB,QAAC,uBAAuB;QAAA,uBACpB,QAAC,cAAc;UAAC,OAAO,EAAC,WAAW;UAAC,SAAS,EAAC,SAAS;UAAC,IAAI,EAAC,MAAM;UAAC,KAAK,EAAC,SAAS;UAAA,wBAC/E,QAAC,QAAQ,CAAC,IAAI;YAAC,EAAE,EAAC,QAAQ;YAAC,OAAO,EAAET,WAAY;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAoC,eACpF,QAAC,QAAQ,CAAC,IAAI;YAAC,EAAE,EAAC,QAAQ;YAAC,OAAO,EAAE,MAAMD,QAAQ,CAACa,aAAa,CAAChB,YAAY,CAAE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAuC;QAAA;UAAA;UAAA;UAAA;QAAA;MACzG;QAAA;QAAA;QAAA;MAAA,QACK;IAAA;MAAA;MAAA;MAAA;IAAA;EACrB,iBACV;AAEX,CAAC;AAAC,GApCWE,aAAa;EAAA,QAEDR,OAAO;AAAA;AAAA,KAFnBQ,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}